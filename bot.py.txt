
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes,
    ConversationHandler, filters
)

TOKEN = '8085879338:AAHiW4fMyFffYE4hqY9rTTnRH2lQKmauMd8'  # ‚Üê –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

CHOOSING, ADVERTISER, BLOGGER = range(3)

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["üî∏ –Ø —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—å", "üîπ –Ø –±–ª–æ–≥–µ—Ä"]]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ö—Ç–æ —Ç—ã?", reply_markup=markup)
    return CHOOSING

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ ===
async def choose_role(update: Update, context: ContextTypes.DEFAULT_TYPE):
    role = update.message.text
    if "—Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—å" in role:
        await update.message.reply_text("–ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n\n1. –ù–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞\n2. –ù–∏—à–∞\n3. –ë—é–¥–∂–µ—Ç\n4. –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è")
        return ADVERTISER
    elif "–±–ª–æ–≥–µ—Ä" in role:
        await update.message.reply_text("–ó–∞–ø–æ–ª–Ω–∏ –∞–Ω–∫–µ—Ç—É:\n\n1. –ò–º—è\n2. –°—Å—ã–ª–∫–∞ –Ω–∞ –±–ª–æ–≥\n3. –¢–µ–º–∞—Ç–∏–∫–∞\n4. –û—Ö–≤–∞—Ç\n5. –¶–µ–Ω–∞ –∑–∞ —Ä–µ–∫–ª–∞–º—É")
        return BLOGGER

# === –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –æ—Ç —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è ===
async def save_advertiser(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user = update.message.from_user
    with open("zayavki.txt", "a", encoding="utf-8") as file:
        file.write(f"\n=== –ó–∞—è–≤–∫–∞ –æ—Ç —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è ===\n"
                   f"–ò–º—è: {user.first_name} @{user.username}\n"
                   f"{text}\n")
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ —Å–∫–æ—Ä–æ. üôå")
    return ConversationHandler.END

# === –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∫–µ—Ç—É –±–ª–æ–≥–µ—Ä–∞ ===
async def save_blogger(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user = update.message.from_user
    with open("zayavki.txt", "a", encoding="utf-8") as file:
        file.write(f"\n=== –ê–Ω–∫–µ—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ ===\n"
                   f"–ò–º—è: {user.first_name} @{user.username}\n"
                   f"{text}\n")
    await update.message.reply_text("–ê–Ω–∫–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞! –ú—ã –¥–æ–±–∞–≤–∏–º –≤–∞—Å –≤ –±–∞–∑—É ‚úÖ")
    return ConversationHandler.END

# === –û—Ç–º–µ–Ω–∞ –¥–∏–∞–ª–æ–≥–∞ ===
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–∫–µ–π, –æ—Ç–º–µ–Ω–∏–ª–∏ üòå")
    return ConversationHandler.END

# === –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
app = ApplicationBuilder().token(TOKEN).build()

conv_handler = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        CHOOSING: [MessageHandler(filters.TEXT & ~filters.COMMAND, choose_role)],
        ADVERTISER: [MessageHandler(filters.TEXT & ~filters.COMMAND, save_advertiser)],
        BLOGGER: [MessageHandler(filters.TEXT & ~filters.COMMAND, save_blogger)],
    },
    fallbacks=[CommandHandler("cancel", cancel)],
)

app.add_handler(conv_handler)
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
def authenticate_google_sheets():
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/spreadsheets",
             "https://www.googleapis.com/auth/drive.file", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
    client = gspread.authorize(creds)
    return client

# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
def open_google_sheet():
    client = authenticate_google_sheets()
    sheet = client.open("–ó–∞—è–≤–∫–∏ Telegram").sheet1  # –£–∫–∞–∂–∏ –∏–º—è —Å–≤–æ–µ–π —Ç–∞–±–ª–∏—Ü—ã
    return sheet

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É
def add_to_google_sheet(data):
    sheet = open_google_sheet()
    sheet.append_row(data)

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
new_data = ["–†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—å", "–ò–º—è —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è", "@username", "–¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏", "2025-04-22"]
add_to_google_sheet(new_data)


print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ñ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram...")
app.run_polling()
